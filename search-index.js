crystal_doc_search_index_callback({"repository_name":"notify","body":"notify.cr\n=========\n\n![license](https://raster.shields.io/badge/license-MIT%20with%20restrictions-green.png)\n[![Build Status](https://img.shields.io/github/workflow/status/woodruffw/notify.cr/CI/master)](https://github.com/woodruffw/notify.cr/actions?query=workflow%3ACI)\n\nA Crystal library for\n[Desktop Notifications](http://www.galago-project.org/specs/notification/0.9/index.html) compatible\nnotification daemons. Uses DBus internally.\n\n**Important**: Platforms with notification systems that don't use DBus/Desktop Notifications are\ncurrently **not supported**. If you'd like support for one of these platforms (e.g., macOS and\nWindows), please contribute one!\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  notify:\n    github: woodruffw/notify.cr\n```\n\n## Usage\n\n```crystal\nrequire \"notify\"\n\nnotifier = Notify.new\n\nnotifier.notify \"hello\", body: \"<b>world!</b>\"\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/woodruffw/notify/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [woodruffw](https://github.com/woodruffw) William Woodruff - creator, maintainer\n","program":{"html_id":"notify/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"notify","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"notify/Notify","path":"Notify.html","kind":"class","full_name":"Notify","name":"Notify","abstract":false,"superclass":{"html_id":"notify/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"notify/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"notify/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/notify.cr","line_number":9,"url":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L9"},{"filename":"src/notify/version.cr","line_number":1,"url":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify/version.cr#L1"}],"repository_name":"notify","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Notify` is a Crystal library for\n[Desktop Notifications](http://www.galago-project.org/specs/notification/0.9/index.html)\ncompatible notification systems. It uses DBus internally to connect to the user's notification\ndaemon.","summary":"<p><code><a href=\"Notify.html\">Notify</a></code> is a Crystal library for <a href=\"http://www.galago-project.org/specs/notification/0.9/index.html\" target=\"_blank\">Desktop Notifications</a> compatible notification systems.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Creates a new instance of `Notify`.","summary":"<p>Creates a new instance of <code><a href=\"Notify.html\">Notify</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L19","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"capabilities:Array(String)-instance-method","html_id":"capabilities:Array(String)-instance-method","name":"capabilities","doc":"An array of strings indicating the capabilities of this notification daemon.","summary":"<p>An array of strings indicating the capabilities of this notification daemon.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L13","def":{"name":"capabilities","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@capabilities"}},{"id":"capability?(feature:String)-instance-method","html_id":"capability?(feature:String)-instance-method","name":"capability?","doc":"Checks whether the user's notification daemon supports *feature*.\n\nThe list of currently standardized features can be found here:\n<http://www.galago-project.org/specs/notification/0.9/x408.html#command-get-capabilities>\n\n```\nn.capability?(\"body\") # => true\n```","summary":"<p>Checks whether the user's notification daemon supports <em>feature</em>.</p>","abstract":false,"args":[{"name":"feature","doc":null,"default_value":"","external_name":"feature","restriction":"String"}],"args_string":"(feature : String)","source_link":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L37","def":{"name":"capability?","args":[{"name":"feature","doc":null,"default_value":"","external_name":"feature","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"capabilities.includes?(feature)"}},{"id":"close(id:UInt32)-instance-method","html_id":"close(id:UInt32)-instance-method","name":"close","doc":"Closes the open notification whose identifier is *id*, or does nothing if that notification\nis already closed.\n\n```\nn.close(1337)\n```","summary":"<p>Closes the open notification whose identifier is <em>id</em>, or does nothing if that notification is already closed.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"args_string":"(id : UInt32)","source_link":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L66","def":{"name":"close","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(iface.call(\"CloseNotification\", [id])).reply"}},{"id":"information:Array(String)-instance-method","html_id":"information:Array(String)-instance-method","name":"information","doc":"An array of strings indicating the version and vendor of this notification daemon.","summary":"<p>An array of strings indicating the version and vendor of this notification daemon.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L16","def":{"name":"information","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@information"}},{"id":"notify(summary,app_name=&quot;&quot;,replaces_id=0_u32,app_icon=&quot;&quot;,body=&quot;&quot;,actions=[]ofString,hints={}ofString=>DBus::Variant,expire_timeout=-1)-instance-method","html_id":"notify(summary,app_name=&quot;&quot;,replaces_id=0_u32,app_icon=&quot;&quot;,body=&quot;&quot;,actions=[]ofString,hints={}ofString=>DBus::Variant,expire_timeout=-1)-instance-method","name":"notify","doc":"Creates a new notification. *summary* is the only required parameter.\n\nSee <http://www.galago-project.org/specs/notification/0.9/x408.html#command-notify> for\ninformation on optional parameters.\n\nReturns a notification ID that can be used with `close` or as *replaces_id* in\nsubsequent calls to `notify`.\n\n```\nn.notify \"hello\", body: \"<b>world!</b>\" # => 1337\n```","summary":"<p>Creates a new notification.</p>","abstract":false,"args":[{"name":"summary","doc":null,"default_value":"","external_name":"summary","restriction":""},{"name":"app_name","doc":null,"default_value":"\"\"","external_name":"app_name","restriction":""},{"name":"replaces_id","doc":null,"default_value":"0_u32","external_name":"replaces_id","restriction":""},{"name":"app_icon","doc":null,"default_value":"\"\"","external_name":"app_icon","restriction":""},{"name":"body","doc":null,"default_value":"\"\"","external_name":"body","restriction":""},{"name":"actions","doc":null,"default_value":"[] of String","external_name":"actions","restriction":""},{"name":"hints","doc":null,"default_value":"{} of String => DBus::Variant","external_name":"hints","restriction":""},{"name":"expire_timeout","doc":null,"default_value":"-1","external_name":"expire_timeout","restriction":""}],"args_string":"(summary, app_name = <span class=\"s\">&quot;&quot;</span>, replaces_id = <span class=\"n\">0_u32</span>, app_icon = <span class=\"s\">&quot;&quot;</span>, body = <span class=\"s\">&quot;&quot;</span>, actions = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, hints = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">DBus</span><span class=\"t\">::</span><span class=\"t\">Variant</span>, expire_timeout = <span class=\"n\">-1</span>)","source_link":"https://github.com/woodruffw/notify.cr/blob/ea279f56dc913cdea4fb537f163fc3a6624f65bf/src/notify.cr#L52","def":{"name":"notify","args":[{"name":"summary","doc":null,"default_value":"","external_name":"summary","restriction":""},{"name":"app_name","doc":null,"default_value":"\"\"","external_name":"app_name","restriction":""},{"name":"replaces_id","doc":null,"default_value":"0_u32","external_name":"replaces_id","restriction":""},{"name":"app_icon","doc":null,"default_value":"\"\"","external_name":"app_icon","restriction":""},{"name":"body","doc":null,"default_value":"\"\"","external_name":"body","restriction":""},{"name":"actions","doc":null,"default_value":"[] of String","external_name":"actions","restriction":""},{"name":"hints","doc":null,"default_value":"{} of String => DBus::Variant","external_name":"hints","restriction":""},{"name":"expire_timeout","doc":null,"default_value":"-1","external_name":"expire_timeout","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"params = [app_name, replaces_id, app_icon, summary, body, actions, hints, expire_timeout]\n(iface.call(\"Notify\", params)).reply.first.as(UInt32)\n"}}],"macros":[],"types":[]}]}})